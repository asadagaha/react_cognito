{"ast":null,"code":"var _jsxFileName = \"/Users/tsushimakatsu/Desktop/source/workout/cognito_login/src/SignUp.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button, Container, Stack, TextField } from \"@mui/material\";\nimport * as AmazonCognitoIdentity from \"amazon-cognito-identity-js\";\nimport { getUserPool } from \"./config\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SignUp = props => {\n  _s();\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const signUp = data => {\n    const formValue = {\n      email: data.email,\n      password: data.password\n    };\n    const attributeList = [];\n    const dataEmail = {\n      Name: \"email\",\n      Value: data.email\n    };\n    const attributeEmail = new AmazonCognitoIdentity.CognitoUserAttribute(dataEmail);\n    attributeList.push(attributeEmail);\n    const validationData = [];\n    const userPool = getUserPool();\n    userPool.signUp(formValue.email, formValue.password, attributeList, validationData, (err, result) => {\n      if (err) {\n        alert(err.message || JSON.stringify(err));\n        return;\n      }\n      const cognitoUser = result.user;\n      console.log(\"user name is \" + cognitoUser.getUsername());\n      props.setStatus(\"unconfirmed\");\n      props.setEmail(data.email);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"unregistered\",\n    maxWidth: \"sm\",\n    sx: {\n      pt: 5\n    },\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        label: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\",\n        type: \"email\",\n        ...register(\"email\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        label: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n        type: \"password\",\n        ...register(\"password\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit(signUp),\n        color: \"primary\",\n        variant: \"contained\",\n        children: \"\\u9001\\u4FE1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUp, \"zkd3JmxRK/AmyiWtSfciHeYO5Zk=\", false, function () {\n  return [useForm];\n});\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","Button","Container","Stack","TextField","AmazonCognitoIdentity","getUserPool","useForm","SignUp","props","register","handleSubmit","signUp","data","formValue","email","password","attributeList","dataEmail","Name","Value","attributeEmail","CognitoUserAttribute","push","validationData","userPool","err","result","alert","message","JSON","stringify","cognitoUser","user","console","log","getUsername","setStatus","setEmail","pt"],"sources":["/Users/tsushimakatsu/Desktop/source/workout/cognito_login/src/SignUp.tsx"],"sourcesContent":["import React from 'react'\nimport { Button, Container, Stack, TextField } from \"@mui/material\";\nimport * as AmazonCognitoIdentity from \"amazon-cognito-identity-js\";\nimport { getUserPool } from \"./config\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\n\ninterface SignUpForm {\n  email: string;\n  password: string;\n}\n\ninterface Props {\n  setStatus: React.Dispatch<React.SetStateAction<string>>;\n  setEmail: React.Dispatch<React.SetStateAction<string>>;\n}\n\nexport const SignUp = (props: Props) => {\n  const { register, handleSubmit } = useForm<SignUpForm>();\n\n  const signUp: SubmitHandler<SignUpForm> = (data) => {\n    const formValue = {\n      email: data.email,\n      password: data.password,\n    };\n\n    const attributeList = [];\n\n    const dataEmail = {\n      Name: \"email\",\n      Value: data.email,\n    };\n\n    const attributeEmail = new AmazonCognitoIdentity.CognitoUserAttribute(\n      dataEmail\n    );\n\n    attributeList.push(attributeEmail);\n\n    const validationData: AmazonCognitoIdentity.CognitoUserAttribute[] = [];\n\n    const userPool = getUserPool();\n\n    userPool.signUp(\n      formValue.email,\n      formValue.password,\n      attributeList,\n      validationData,\n      (err, result) => {\n        if (err) {\n          alert(err.message || JSON.stringify(err));\n          return;\n        }\n        const cognitoUser = result!.user;\n        console.log(\"user name is \" + cognitoUser.getUsername());\n        props.setStatus(\"unconfirmed\");\n        props.setEmail(data.email);\n      }\n    );\n  };\n\n  return (\n    <Container className=\"unregistered\" maxWidth=\"sm\" sx={{ pt: 5 }}>\n      <Stack spacing={2}>\n        <TextField\n          required\n          label=\"メールアドレス\"\n          type=\"email\"\n          {...register(\"email\")}\n        />\n        <TextField\n          required\n          label=\"パスワード\"\n          type=\"password\"\n          {...register(\"password\")}\n        />\n        <Button\n          onClick={handleSubmit(signUp)}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          送信\n        </Button>\n      </Stack>\n    </Container>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,SAAS,EAAEC,KAAK,EAAEC,SAAS,QAAQ,eAAe;AACnE,OAAO,KAAKC,qBAAqB,MAAM,4BAA4B;AACnE,SAASC,WAAW,QAAQ,UAAU;AACtC,SAAwBC,OAAO,QAAQ,iBAAiB;AAAC;AAYzD,OAAO,MAAMC,MAAM,GAAIC,KAAY,IAAK;EAAA;EACtC,MAAM;IAAEC,QAAQ;IAAEC;EAAa,CAAC,GAAGJ,OAAO,EAAc;EAExD,MAAMK,MAAiC,GAAIC,IAAI,IAAK;IAClD,MAAMC,SAAS,GAAG;MAChBC,KAAK,EAAEF,IAAI,CAACE,KAAK;MACjBC,QAAQ,EAAEH,IAAI,CAACG;IACjB,CAAC;IAED,MAAMC,aAAa,GAAG,EAAE;IAExB,MAAMC,SAAS,GAAG;MAChBC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAEP,IAAI,CAACE;IACd,CAAC;IAED,MAAMM,cAAc,GAAG,IAAIhB,qBAAqB,CAACiB,oBAAoB,CACnEJ,SAAS,CACV;IAEDD,aAAa,CAACM,IAAI,CAACF,cAAc,CAAC;IAElC,MAAMG,cAA4D,GAAG,EAAE;IAEvE,MAAMC,QAAQ,GAAGnB,WAAW,EAAE;IAE9BmB,QAAQ,CAACb,MAAM,CACbE,SAAS,CAACC,KAAK,EACfD,SAAS,CAACE,QAAQ,EAClBC,aAAa,EACbO,cAAc,EACd,CAACE,GAAG,EAAEC,MAAM,KAAK;MACf,IAAID,GAAG,EAAE;QACPE,KAAK,CAACF,GAAG,CAACG,OAAO,IAAIC,IAAI,CAACC,SAAS,CAACL,GAAG,CAAC,CAAC;QACzC;MACF;MACA,MAAMM,WAAW,GAAGL,MAAM,CAAEM,IAAI;MAChCC,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGH,WAAW,CAACI,WAAW,EAAE,CAAC;MACxD3B,KAAK,CAAC4B,SAAS,CAAC,aAAa,CAAC;MAC9B5B,KAAK,CAAC6B,QAAQ,CAACzB,IAAI,CAACE,KAAK,CAAC;IAC5B,CAAC,CACF;EACH,CAAC;EAED,oBACE,QAAC,SAAS;IAAC,SAAS,EAAC,cAAc;IAAC,QAAQ,EAAC,IAAI;IAAC,EAAE,EAAE;MAAEwB,EAAE,EAAE;IAAE,CAAE;IAAA,uBAC9D,QAAC,KAAK;MAAC,OAAO,EAAE,CAAE;MAAA,wBAChB,QAAC,SAAS;QACR,QAAQ;QACR,KAAK,EAAC,4CAAS;QACf,IAAI,EAAC,OAAO;QAAA,GACR7B,QAAQ,CAAC,OAAO;MAAC;QAAA;QAAA;QAAA;MAAA,QACrB,eACF,QAAC,SAAS;QACR,QAAQ;QACR,KAAK,EAAC,gCAAO;QACb,IAAI,EAAC,UAAU;QAAA,GACXA,QAAQ,CAAC,UAAU;MAAC;QAAA;QAAA;QAAA;MAAA,QACxB,eACF,QAAC,MAAM;QACL,OAAO,EAAEC,YAAY,CAACC,MAAM,CAAE;QAC9B,KAAK,EAAC,SAAS;QACf,OAAO,EAAC,WAAW;QAAA,UACpB;MAED;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,QACE;AAEhB,CAAC;AAAC,GArEWJ,MAAM;EAAA,QACkBD,OAAO;AAAA;AAAA,KAD/BC,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}